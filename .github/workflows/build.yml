name: Build and Release Decky Alarm plugin

on:
    push:
        tags:
            - 'v*'
    pull_request:
        branches: ['main']

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: '18.16'

            - name: Install pnpm
              run: npm install -g pnpm

            - name: Install Dependencies
              run: pnpm install

            - name: build
              run: pnpm run build

            - name: copy files into build
              run: |
                  cp plugin.json ./dist/
                  cp package.json ./dist/
                  cp LICENSE ./dist/
                  cp pnpm-lock.yaml ./dist/
                  cp Readme.md ./dist/
                  cp release.md ./dist/
                  mkdir ./dist/dist
                  mv ./dist/index.js ./dist/dist/
                  mv ./dist/index.js.map ./dist/dist/

            - name: Upload package
              uses: actions/upload-artifact@v4
              with:
                  name: decky-alarm
                  path: |
                      ./dist/*
    release:
        needs: build
        if: startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest
        permissions:
                contents: write
        steps:
            - uses: actions/checkout@v4

            - uses: actions/download-artifact@v4
              with:
                  name: decky-alarm
                  path: decky-alarm

            - name: zip/tar release
              run: |
                  zip -r decky-alarm.zip decky-alarm/*
                  tar -czvf decky-alarm.tar.gz decky-alarm

            - name: Create a release
              uses: ncipollo/release-action@v1.15.0
              with:
                  artifacts: 'decky-alarm.zip,decky-alarm.tar.gz'
                  bodyFile: 'release.md'
                  token: ${{ secrets.GITHUB_TOKEN }}
